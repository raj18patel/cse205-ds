/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL){
            return ans;
        }
        queue<TreeNode*> v;
        v.push(root);
        bool lefttoright = true;
        while(!v.empty()){
            int l=v.size();
            vector<int>r;
            for(int i=0;i<l;i++){
                TreeNode* rv =v.front();
                v.pop();
                int in=lefttoright ? i:l-i-1;
                r.push_back(rv->val);
                if(rv->left)  v.push(rv->left);
                if(rv->right) v.push(rv->right);
                
            }
            lefttoright=!lefttoright;
            for(auto b : r){
                ans.push_back(b);
            }
            
            
        }
        return ans;
    }
};