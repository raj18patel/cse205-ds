/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        queue<TreeNode*>v;
        v.push(root);
        int c=0;
        while(!v.empty()){
            int b=v.size();
            c++;
            
            for(int i=0;i<b;i++){
                TreeNode* r=v.front();
                v.pop();
                if(r->left){
                    v.push(r->left);
                }
                if(r->right){
                    v.push(r->right);
                }
                //v.pop();
                if(r->left==NULL &&r->right==NULL){
                    return c;
                }
            }
        }
        return c;
    }
};