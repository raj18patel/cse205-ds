/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int h(TreeNode* root , int &ans){
        if(root==NULL){
            return -1;
        }
        if(root->left==NULL && root->right==NULL){
            return 0;
        }
        int l=h(root->left ,ans)+1;
        int r=h(root->right , ans)+1;
        ans = max(ans,l+r);
        return max(l,r);
        


    }
    int diameterOfBinaryTree(TreeNode* root) {
        int ans=0;
        h(root , ans);
        return ans;
    }
};